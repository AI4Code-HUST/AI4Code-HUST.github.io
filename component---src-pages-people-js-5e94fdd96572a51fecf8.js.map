{"version":3,"sources":["webpack:///./src/components/people-link.js","webpack:///./src/pages/people.js"],"names":["PeopleLink","data","language","useLanguageContext","description","frontmatter","metaDescription","metaDescriptionvn","className","to","path","thumbnail","src","alt","title","position","endYear","PeoplePage","edges","allMarkdownRemark","currentPeople","filter","edge","node","date","map","key","id","prevPeople","supervisors","leaders","style","marginBottom"],"mappings":"gKAuCeA,EAnCI,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACZC,EAAaC,cAAbD,SACFE,EAA2B,OAAbF,EAAoBD,EAAKI,YAAYC,gBAAkBL,EAAKI,YAAYE,kBAE5F,OACE,6BAASC,UAAU,QACjB,kBAAC,OAAD,CAAMC,GAAIR,EAAKI,YAAYK,QACtBT,EAAKI,YAAYM,WAClB,yBACEH,UAAU,gBACVI,IAAKX,EAAKI,YAAYM,UACtBE,IAAKZ,EAAKI,YAAYS,MAAQ,qBAIpC,gCACE,wBAAIN,UAAU,cACZ,kBAAC,OAAD,CAAMC,GAAIR,EAAKI,YAAYK,KAAMF,UAAU,aACxCP,EAAKI,YAAYS,QAGS,WAA9Bb,EAAKI,YAAYU,SAChB,yBAAKP,UAAU,aAAaJ,GAE5B,yBAAKI,UAAU,aACC,OAAbN,EAAA,mBACsBD,EAAKI,YAAYW,QADvC,KACmDZ,EADnD,qBAEwBH,EAAKI,YAAYW,QAFzC,KAEqDZ,M,YC6CnDa,UArEI,SAAC,GAIb,IAFkBC,EAEnB,EAHJjB,KACEkB,kBAAqBD,MAGfhB,EAAaC,cAAbD,SAGFkB,EAAgBF,EACnBG,QACC,SAACC,GAAD,QACIA,EAAKC,KAAKlB,YAAYmB,MACW,WAAnCF,EAAKC,KAAKlB,YAAYU,UACa,eAAnCO,EAAKC,KAAKlB,YAAYU,UACa,WAAnCO,EAAKC,KAAKlB,YAAYU,YAEzBU,KAAI,SAACH,GAAD,OAAU,kBAAC,EAAD,CAAYI,IAAKJ,EAAKC,KAAKI,GAAI1B,KAAMqB,EAAKC,UAGrDK,EAAaV,EAChBG,QACC,SAACC,GAAD,QACIA,EAAKC,KAAKlB,YAAYmB,MACW,WAAnCF,EAAKC,KAAKlB,YAAYU,YAEzBU,KAAI,SAACH,GAAD,OAAU,kBAAC,EAAD,CAAYI,IAAKJ,EAAKC,KAAKI,GAAI1B,KAAMqB,EAAKC,UAGrDM,EAAcX,EACjBG,QACC,SAACC,GAAD,QACIA,EAAKC,KAAKlB,YAAYmB,MACW,eAAnCF,EAAKC,KAAKlB,YAAYU,YAEzBU,KAAI,SAACH,GAAD,OAAU,kBAAC,EAAD,CAAYI,IAAKJ,EAAKC,KAAKI,GAAI1B,KAAMqB,EAAKC,UAGrDO,EAAUZ,EACbG,QACC,SAACC,GAAD,QACIA,EAAKC,KAAKlB,YAAYmB,MACW,WAAnCF,EAAKC,KAAKlB,YAAYU,YAEzBU,KAAI,SAACH,GAAD,OAAU,kBAAC,EAAD,CAAYI,IAAKJ,EAAKC,KAAKI,GAAI1B,KAAMqB,EAAKC,UAE3D,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAeT,MAAM,WACrB,4BAAkB,OAAbZ,EAAoB,eAAiB,mBAC1C,4BAAkB,OAAbA,EAAoB,cAAgB,wBACzC,yBAAKM,UAAU,cAAcuB,MAAO,CAAEC,aAAc,SACjDH,GAEH,4BAAkB,OAAb3B,EAAoB,UAAY,eACrC,yBAAKM,UAAU,cAAcuB,MAAO,CAAEC,aAAc,SACjDF,GAEH,4BAAkB,OAAb5B,EAAoB,UAAY,cACrC,yBAAKM,UAAU,cAAcuB,MAAO,CAAEC,aAAc,SACjDZ,GAEH,4BAAkB,OAAblB,EAAoB,SAAW,kBACpC,yBAAKM,UAAU,cAAcuB,MAAO,CAAEC,aAAc,SACjDJ","file":"component---src-pages-people-js-5e94fdd96572a51fecf8.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { useLanguageContext } from \"../contexts/language-context\";\n\nconst PeopleLink = ({ data }) => {\n  const { language } = useLanguageContext();\n  const description = language === \"en\" ? data.frontmatter.metaDescription : data.frontmatter.metaDescriptionvn;\n\n  return (\n    <article className=\"card\">\n      <Link to={data.frontmatter.path}>\n        {!!data.frontmatter.thumbnail && (\n          <img\n            className=\"people-avatar\"\n            src={data.frontmatter.thumbnail}\n            alt={data.frontmatter.title + \"- Featured Shot\"}\n          />\n        )}\n      </Link>\n      <header>\n        <h2 className=\"post-title\">\n          <Link to={data.frontmatter.path} className=\"post-link\">\n            {data.frontmatter.title}\n          </Link>\n        </h2>\n        {data.frontmatter.position !== \"alumni\" ? (\n          <div className=\"post-meta\">{description}</div>\n        ) : (\n          <div className=\"post-meta\">\n            {language === \"en\"\n              ? `Graduated since ${data.frontmatter.endYear}. ${description}`\n              : `Tốt nghiệp từ năm ${data.frontmatter.endYear}. ${description}`}\n          </div>\n        )}\n      </header>\n    </article>\n  );\n};\n\nexport default PeopleLink;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport PeopleLink from \"../components/people-link\";\nimport HelmetWrapper from \"../components/helmetWrapper\";\nimport { useLanguageContext } from \"../contexts/language-context\";\n\nconst PeoplePage = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => {\n  const { language } = useLanguageContext();\n\n  // Filter and map current people (excluding alumni, supervisors, and leaders)\n  const currentPeople = edges\n    .filter(\n      (edge) =>\n        !!edge.node.frontmatter.date &&\n        edge.node.frontmatter.position !== \"alumni\" &&\n        edge.node.frontmatter.position !== \"supervisor\" &&\n        edge.node.frontmatter.position !== \"leader\"\n    )\n    .map((edge) => <PeopleLink key={edge.node.id} data={edge.node} />);\n\n  // Filter and map previous lab members (alumni)\n  const prevPeople = edges\n    .filter(\n      (edge) =>\n        !!edge.node.frontmatter.date &&\n        edge.node.frontmatter.position === \"alumni\"\n    )\n    .map((edge) => <PeopleLink key={edge.node.id} data={edge.node} />);\n\n  // Filter and map supervisors\n  const supervisors = edges\n    .filter(\n      (edge) =>\n        !!edge.node.frontmatter.date &&\n        edge.node.frontmatter.position === \"supervisor\"\n    )\n    .map((edge) => <PeopleLink key={edge.node.id} data={edge.node} />);\n\n  // Filter and map leaders\n  const leaders = edges\n    .filter(\n      (edge) =>\n        !!edge.node.frontmatter.date &&\n        edge.node.frontmatter.position === \"leader\"\n    )\n    .map((edge) => <PeopleLink key={edge.node.id} data={edge.node} />);\n\n  return (\n    <Layout>\n      <HelmetWrapper title=\"People\" />\n      <h1>{language === \"en\" ? \"Team Members\" : \"Thành Viên Nhóm\"}</h1>\n      <h2>{language === \"en\" ? \"Supervisors\" : \"Giảng viên hướng dẫn\"}</h2>\n      <div className=\"grids small\" style={{ marginBottom: \"32px\" }}>\n        {supervisors}\n      </div>\n      <h2>{language === \"en\" ? \"Leaders\" : \"Trưởng nhóm\"}</h2>\n      <div className=\"grids small\" style={{ marginBottom: \"32px\" }}>\n        {leaders}\n      </div>\n      <h2>{language === \"en\" ? \"Members\" : \"Thành Viên\"}</h2>\n      <div className=\"grids small\" style={{ marginBottom: \"32px\" }}>\n        {currentPeople}\n      </div>\n      <h2>{language === \"en\" ? \"Alumni\" : \"Cựu Thành Viên\"}</h2>\n      <div className=\"grids small\" style={{ marginBottom: \"32px\" }}>\n        {prevPeople}\n      </div>\n    </Layout>\n  );\n};\n\nexport default PeoplePage;\n\nexport const pageQuery = graphql`\n  query peoplePageQuery {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(\n      sort: { order: ASC, fields: [frontmatter___order] }\n      filter: { frontmatter: { path: { regex: \"/people/\" } } }\n    ) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            title\n            thumbnail\n            metaDescription\n            metaDescriptionvn\n            position\n            endYear\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}