{"version":3,"sources":["webpack:///./src/pages/contact.js"],"names":["RequiredWarning","fieldName","style","color","ContactPage","site","data","useState","submitted","setSubmitted","formError","setFormError","title","siteMetadata","description","className","href","onSubmit","e","preventDefault","formdata","FormData","target","templateParams","name","get","replyTo","subject","message","checkedFields","Object","entries","forEach","key","filter","field","push","length","mailtoLink","encodeURIComponent","window","location","margin","lineHeight","htmlFor","includes","type","id","display","justifyContent","marginRight"],"mappings":"6FACA,wDAIMA,EAAkB,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACzB,OACE,0BAAMC,MAAO,CAAEC,MAAO,YAAtB,MAA0CF,EAA1C,kBAwLWG,UApLK,SAAC,GAAwB,IAAdC,EAAa,EAArBC,KAAQD,KAC7B,EAAkCE,oBAAS,GAApCC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,mBAAS,IAApCG,EAAP,KAAkBC,EAAlB,KAwCA,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,MAAK,aAAeP,EAAKQ,aAAaD,MACtCE,YAAa,mBAAqBT,EAAKQ,aAAaC,cAEtD,yBAAKC,UAAU,sBACb,6BACE,wBAAIA,UAAU,cAAd,cACA,yBAAKA,UAAU,mBAAf,8HAGE,uBAAGC,KAAK,kCACL,IADH,0BAE0B,KAL5B,kCASA,yBAAKD,UAAU,mBACb,qEADF,qPAOA,yBAAKA,UAAU,mBACb,yCADF,2JAKE,4BACE,oDACA,8DACA,4DACA,8DACA,+DACA,0DAXJ,uEAcE,4BACE,sEACA,kGAIA,mDACA,uEACA,wEACA,0EAGJ,yBAAKA,UAAU,mBACb,8CACA,4BACE,8JAKA,uIAIA,wHAIA,yDACA,gFAGJ,yBAAKA,UAAU,mBACb,sCADF,oIAMF,6BACE,0BAAMA,UAAU,iBAAiBE,SApHpB,SAACC,GACpBA,EAAEC,iBACF,IAAMC,EAAW,IAAIC,SAASH,EAAEI,QAE1BC,EAAiB,CACrBC,KAAMJ,EAASK,IAAI,WACnBC,QAASN,EAASK,IAAI,aACtBE,QAASP,EAASK,IAAI,cACtBG,QAASR,EAASK,IAAI,eAIpBI,EAAgB,GAcpB,GAZAC,OAAOC,QAAQR,GAAgBS,SAAQ,YAAmB,IAAjBC,EAAgB,UAIrDJ,EAAgBA,EAAcK,QAAO,SAACC,GAAD,OAAWA,IAAUF,KAF1DJ,EAAcO,KAAKH,MAOvBtB,EAAakB,GAGgB,IAAzBA,EAAcQ,OAAc,CAC9B,IAAMC,EAAU,0CAA6CC,mBAC3DhB,EAAeI,SADD,SAENY,mBAAmB,SAClBhB,EAAeC,KADE,YACcD,EAAeG,QAD7B,OAC2CH,EAAeK,SAGtFY,OAAOC,SAASzB,KAAOsB,EACvB7B,GAAa,MAmFND,EACC,uBAAGN,MAAO,CAAEwC,OAAQ,EAAGC,WAAY,UAAnC,gGAKA,oCACE,6BACE,2BAAOC,QAAQ,WAAf,OACO,IACJlC,EAAUmC,SAAS,SAClB,kBAAC7C,EAAD,CAAiBC,UAAW,UAGhC,2BAAO6C,KAAK,OAAOtB,KAAK,UAAUuB,GAAG,aAEvC,6BACE,2BAAOH,QAAQ,aAAf,QAEGlC,EAAUmC,SAAS,YAClB,kBAAC7C,EAAD,CAAiBC,UAAW,WAGhC,2BAAO6C,KAAK,QAAQtB,KAAK,YAAYuB,GAAG,eAE1C,6BACE,2BAAOH,QAAQ,cAAf,UAEGlC,EAAUmC,SAAS,YAClB,kBAAC7C,EAAD,CAAiBC,UAAW,aAGhC,2BAAO6C,KAAK,OAAOtB,KAAK,aAAauB,GAAG,gBAE1C,6BACE,2BAAOH,QAAQ,cAAf,UAEGlC,EAAUmC,SAAS,YAClB,kBAAC7C,EAAD,CAAiBC,UAAW,aAGhC,8BAAUuB,KAAK,aAAauB,GAAG,gBAEjC,yBAAK7C,MAAO,CAAE8C,QAAS,OAAQC,eAAgB,aAC7C,2BACEH,KAAK,SACL/B,UAAU,kBACVb,MAAO,CAAEgD,YAAa","file":"component---src-pages-contact-js-fb3961cf1341e67f9c41.js","sourcesContent":["import { graphql } from \"gatsby\";\nimport React, { useState } from \"react\";\nimport HelmetWrapper from \"../components/helmetWrapper\";\nimport Layout from \"../components/layout\";\n\nconst RequiredWarning = ({ fieldName }) => {\n  return (\n    <span style={{ color: \"#ff4542\" }}>{` â€” ${fieldName} is required!`}</span>\n  );\n};\n\nconst ContactPage = ({ data: { site } }) => {\n  const [submitted, setSubmitted] = useState(false);\n  const [formError, setFormError] = useState([]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const formdata = new FormData(e.target);\n\n    const templateParams = {\n      name: formdata.get(\"w3lName\"),\n      replyTo: formdata.get(\"w3lSender\"),\n      subject: formdata.get(\"w3lSubject\"),\n      message: formdata.get(\"w3lMessage\"),\n    };\n\n    // Check required fields\n    let checkedFields = [];\n\n    Object.entries(templateParams).forEach(([key, value]) => {\n      if (!value) {\n        checkedFields.push(key);\n      } else {\n        checkedFields = checkedFields.filter((field) => field !== key);\n      }\n    });\n\n    // Set state as batch to avoid race condition\n    setFormError(checkedFields);\n\n    // If there are no errors, send email via `mailto` link\n    if (checkedFields.length === 0) {\n      const mailtoLink = `mailto:manh.td120901@gmail.com?subject=${encodeURIComponent(\n        templateParams.subject\n      )}&body=${encodeURIComponent(\n        `Name: ${templateParams.name}\\nEmail: ${templateParams.replyTo}\\n\\n${templateParams.message}`\n      )}`;\n\n      window.location.href = mailtoLink;\n      setSubmitted(true);\n    }\n  };\n\n  return (\n    <Layout>\n      <HelmetWrapper\n        title={`Contact | ${site.siteMetadata.title}`}\n        description={\"Contact page of \" + site.siteMetadata.description}\n      />\n      <div className=\"two-grids -contact\">\n        <div>\n          <h1 className=\"post-title\">Contact us</h1>\n          <div className=\"primary-content\">\n            If you're interested in joining the lab, collaborating, or have any\n            inquiries, please don't hesitate to send us an email at\n            <a href=\"mailto:manh.td120901@gmail.com\">\n              {\" \"}\n              manh.td120901@gmail.com{\" \"}\n            </a>\n            or use the form on this page &rarr;\n          </div>\n          <div className=\"primary-content\">\n            <b>Student Recruitment for Research Team:</b>\n            The Research Group for Intelligent Software Engineering (RISE) is\n            looking for undergraduate students driven by excellence, excited\n            about innovation, and looking to make a difference. If this sounds\n            like you, you have come to the right place!\n          </div>\n          <div className=\"primary-content\">\n            <b>Your Role:</b>\n            The students will be instructed by supervisors and participate in\n            professional, scientific research. The research topics include but\n            are not limited to:\n            <ul>\n              <li>Automated Bug Fixing</li>\n              <li>Just-in-time Defect Prediction</li>\n              <li>Automatic Code Summarization</li>\n              <li>Software Supply Chain Security</li>\n              <li>Automated Software Verification</li>\n              <li>Bidirectional Programming</li>\n            </ul>\n            The position holder will be required to perform the following tasks:\n            <ul>\n              <li>Complete the tasks assigned by mentors</li>\n              <li>\n                Perform literature review and empirical studies on assigned\n                topics\n              </li>\n              <li>Implement solutions</li>\n              <li>Present and report at least once a week</li>\n              <li>Communicate and coordinate with partners</li>\n              <li>Plan and participate in project meetings</li>\n            </ul>\n          </div>\n          <div className=\"primary-content\">\n            <b>Qualifications:</b>\n            <ul>\n              <li>\n                Have a passion for academic research or have a studying\n                orientation in advanced countries for postgraduate (Master's or\n                Ph.D.)\n              </li>\n              <li>\n                Interest in one of the following areas: Software Engineering,\n                Artificial Intelligence, Machine Learning\n              </li>\n              <li>\n                Good background in Deep Learning or Program Analysis/Software\n                Testing or Web Development\n              </li>\n              <li>Strong programming skills</li>\n              <li>English skills: reading and writing (optional)</li>\n            </ul>\n          </div>\n          <div className=\"primary-content\">\n            <b>Office:</b> Hanoi University of Science and Technology, B1\n            Building, Room 409, Tran Dai Nghia Road, Hai Ba Trung District,\n            Hanoi, Vietnam.\n          </div>\n        </div>\n        <div>\n          <form className=\"form-container\" onSubmit={handleSubmit}>\n            {submitted ? (\n              <p style={{ margin: 0, lineHeight: \"1.5em\" }}>\n                Your message has successfully been sent! It generally takes one\n                to two days for us to reply.\n              </p>\n            ) : (\n              <>\n                <div>\n                  <label htmlFor=\"w3lName\">\n                    Name{\" \"}\n                    {formError.includes(\"name\") && (\n                      <RequiredWarning fieldName={\"Name\"} />\n                    )}\n                  </label>\n                  <input type=\"text\" name=\"w3lName\" id=\"w3lName\" />\n                </div>\n                <div>\n                  <label htmlFor=\"w3lSender\">\n                    Email\n                    {formError.includes(\"replyTo\") && (\n                      <RequiredWarning fieldName={\"Email\"} />\n                    )}\n                  </label>\n                  <input type=\"email\" name=\"w3lSender\" id=\"w3lSender\" />\n                </div>\n                <div>\n                  <label htmlFor=\"w3lSubject\">\n                    Subject\n                    {formError.includes(\"subject\") && (\n                      <RequiredWarning fieldName={\"Subject\"} />\n                    )}\n                  </label>\n                  <input type=\"text\" name=\"w3lSubject\" id=\"w3lSubject\" />\n                </div>\n                <div>\n                  <label htmlFor=\"w3lMessage\">\n                    Message\n                    {formError.includes(\"message\") && (\n                      <RequiredWarning fieldName={\"Message\"} />\n                    )}\n                  </label>\n                  <textarea name=\"w3lMessage\" id=\"w3lMessage\"></textarea>\n                </div>\n                <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n                  <input\n                    type=\"submit\"\n                    className=\"button -primary\"\n                    style={{ marginRight: 0 }}\n                  />\n                </div>\n              </>\n            )}\n          </form>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default ContactPage;\nexport const pageQuery = graphql`\n  query ContactPageQuery {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}